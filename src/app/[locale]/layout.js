import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { notFound } from "next/navigation";
import { getMessages } from "next-intl/server";
import { NextIntlClientProvider } from "next-intl";
import { routing } from "@/i18n/routing";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata = {
  title: "InnovateHer",
  description: "Generated by create next app",
  icons: [
    {
      rel: "icon",
      url: "/favicon.ico",
    },
  ],
};

export default async function LocaleLayout({ children, params }) {
  // Await params to ensure it is ready before accessing `locale`
  
  //AS IN NEXT-15 THEY ARE MADE ASYNCHRONUS
  const { locale } = await params;

  // Validate that the locale is supported
  if (!routing.locales.includes(locale)) {
    notFound(); // Throw a 404 error if locale is invalid
  }

  // Fetch messages for the selected locale
  const messages = await getMessages({ locale });

  return (
    <html lang={locale}>
      <body className={`${geistSans.variable} ${geistMono.variable} antialiased`}>
        <NextIntlClientProvider locale={locale} messages={messages}>
          {children}
        </NextIntlClientProvider>
      </body>
    </html>
  );
}
